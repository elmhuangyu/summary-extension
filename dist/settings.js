import{d as a}from"./utils-5pEQLTu1.js";a("Settings script loaded.");const C=document.getElementById("settingsForm"),v=document.getElementById("openaiApiKey"),y=document.getElementById("geminiApiKey"),f=document.getElementById("defaultAi"),E=document.getElementById("language"),A=document.getElementById("geminiModel"),d=document.getElementById("statusMessage"),h=document.getElementById("debugMode"),m=document.getElementById("providerName"),u=document.getElementById("providerBaseUrl"),g=document.getElementById("providerModel"),p=document.getElementById("providerAccessToken"),M=document.getElementById("addProviderBtn"),l=document.getElementById("openaiCompatibleProvidersList"),s="openaiCompatibleProviders";let i=[];document.addEventListener("DOMContentLoaded",()=>{chrome.storage.local.get(["openaiApiKey","geminiApiKey","defaultAi","language","geminiModel","debugMode",s],e=>{e.openaiApiKey&&(v.value=e.openaiApiKey),e.geminiApiKey&&(y.value=e.geminiApiKey),e.defaultAi&&(f.value=e.defaultAi),e.language&&(E.value=e.language),e.geminiModel&&(A.value=e.geminiModel),e.debugMode&&(h.checked=e.debugMode),i=e[s]||[],r(),a("Settings loaded:",e)}),M.addEventListener("click",P)});function r(){if(l.innerHTML="",i.length===0){const t=document.createElement("p");t.textContent="No custom providers added yet.",l.appendChild(t);return}const e=document.createElement("ul");i.forEach(t=>{const n=document.createElement("li");n.innerHTML=`
            <strong>${t.name}</strong><br>
            <small>URL: ${t.baseUrl}, Model: ${t.model}</small>
        `;const o=document.createElement("button");o.textContent="Delete",o.classList.add("delete-provider-btn"),o.style.marginLeft="10px",o.dataset.providerId=t.id,o.addEventListener("click",()=>b(t.id)),n.appendChild(o),e.appendChild(n)}),l.appendChild(e)}async function P(){const e=m.value.trim(),t=u.value.trim(),n=g.value.trim(),o=p.value.trim();if(!e||!t||!n||!o){alert("Please fill in all fields for the provider.");return}try{new URL(t)}catch{alert("Please enter a valid Base URL.");return}if(i.some(c=>c.name.toLowerCase()===e.toLowerCase())){alert("A provider with this name already exists. Please choose a unique name.");return}const B={id:Date.now().toString(),name:e,baseUrl:t,model:n,accessToken:o};i.push(B),await I(),r(),m.value="",u.value="",g.value="",p.value="",d.textContent="Provider added successfully!",setTimeout(()=>d.textContent="",3e3)}async function b(e){i=i.filter(t=>t.id!==e),await I(),r(),d.textContent="Provider deleted successfully!",setTimeout(()=>d.textContent="",3e3)}async function I(){return new Promise(e=>{chrome.storage.local.set({[s]:i},()=>{a("Providers saved:",i),e()})})}C.addEventListener("submit",e=>{e.preventDefault(),chrome.storage.local.get(null,t=>{const n={...t,openaiApiKey:v.value.trim(),geminiApiKey:y.value.trim(),defaultAi:f.value,language:E.value,geminiModel:A.value,debugMode:h.checked};chrome.storage.local.set(n,()=>{a("Settings saved:",n),d.textContent="Settings saved successfully!",setTimeout(()=>{d.textContent=""},3e3)})})});
